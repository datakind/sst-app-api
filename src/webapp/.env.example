# The following are required in all environments
ENV="LOCAL"
# Generate the following using `openssl rand -hex 32`
SECRET_KEY = ""
ALGORITHM = "HS256"
ACCESS_TOKEN_EXPIRE_MINUTES = 120

# The following can be left empty for the LOCAL environment
DB_USER="user"
DB_PASS="foobar"
DB_NAME="table_names"
DB_PORT=3306
INSTANCE_HOST="xx.xx.xxx.x"
DB_CERT=""
DB_ROOT_CERT=""
DB_KEY=""

# Generate the following using `openssl rand -hex 32`
# This is the initial API key for one-time use during setup.
INITIAL_API_KEY=""
# Its corresponding ID. You can generate this using uuid4 e.g. uuid.uuid4() in python3
INITIAL_API_KEY_ID=""

# GCP related env vars
GCP_REGION="us-east4"
# The service account email used by Databricks
GCP_SERVICE_ACCOUNT_EMAIL=""

# Databricks related environment variables.
CATALOG_NAME=""
DATABRICKS_WORKSPACE=""
DATABRICKS_HOST_URL=""
# The service account used to read GCP buckets from Databricks.
DATABRICKS_SERVICE_ACCOUNT_EMAIL=""

# Datakinders allowed to issue API key. This should be the MINIMUM set. Keep this group small. Pass as a comma separated string structured like so: "abc@dk.org,bcd@dk.org"
# The initial value set is api_key_initial which is the initial API key, this is needed for one-time setup. You can remove this once the api key table is populated.
API_KEY_ISSUERS="api_key_initial"